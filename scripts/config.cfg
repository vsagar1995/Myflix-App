#! /bin/bash

TVpath=../TV/; # REMEMBER / at the end of path! identifies the path to the folder containing tv shows
MoviesPath=../Movies/; #l identifies the path to the folder containing movies

dbNameMovie="../dbM.json" # identifies path and name of the movie database
dbNameTV="../dbTV.json" # identifies path and name of the tv show database

# regex used to identify tv shows, uses the sS1eE01 or sS01eE01 or 01x01 or 1x01 format, in that order
regexTV1="(.*)[ .][sS]([0-9]{1})[eE]([0-9]{2})[ .](.*)"
regexTV2="(.*)[ .][sS]([0-9]{2})[eE]([0-9]{2})[ .](.*)"
regexTV3="(.*)[.]([0-9]{2})[x]([0-9]{2})[.](.*)"
regexTV4="(.*)[.]([0-9]{1})[x]([0-9]{2})[.](.*)"

# regex used to identify tv shows extras, default is a folder named "Season.Extras"
regexExtra="/Season.Extras/" #path in where "extras" for a tv show will be found
tempExtraPath=${TVpath#../} #removes ../ from TVpath
regexExtraShow="(${tempExtraPath})(.*)(${regexExtra})" #matches tv show by "cutting it" between the TVpath variable & the regexExtra variable

regexM="(.*)[.](.*)"; # movie regex

regexHM="([0-9]+\-[0-9]+\-[0-9]+)"; # home movie regex

TVhtml=../TV.html #path to the TV html page
Mhtml=../Movies.html #path to the movie html page

dTVImg=true #download TV poster images true/false
dTVFolder=../TVimg/ #path to folder containing the images once downloaded
imgResizeTV="-resize 500x -gravity center -crop 500x735+0+0" # argument/s for imagemagick if empty nothing happens
AutogenImgResizeTV=(-size 500x735 xc:purple -gravity center -weight 700 -pointsize 200);
compressImgTV=false #wether the image should be comprossed

#exactly the same as above
dMoImg=true
dMoFolder=../MoImg/
imgResizeMo="-resize 500x"
AutogenImgResizeMo=(-resize '500x735' -gravity 'center' -background 'white' -extent '500x735');
compressImgMo=false

fetchTVmetadata=true #download tv show metadata
getEpisodeName=true #download every episode name
createTVsubs=true #search for subs in same folder
fetchMmetadata=true #same as above
createMsubs=true #search for subs for movies
homeMovies=false # $MoviesPath contains home movies, do NOT treat as actual movies. homeMovies are sorted by date, which has to be in filename, ex: Name-YYYY-MM-DD.mp4 

#your tinyPNG api key
tinyPNGapi=""
#your TMDB api key
TMDBapi=""
